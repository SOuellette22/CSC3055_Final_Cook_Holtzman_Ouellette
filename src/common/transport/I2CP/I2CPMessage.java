package common.transport.I2CP;

import merrimackutil.json.JSONSerializable;
import merrimackutil.json.types.JSONObject;
import merrimackutil.json.types.JSONType;

import java.io.InvalidObjectException;

/**
 * I2CP message for I2CP protocol communication
 */
public class I2CPMessage implements JSONSerializable {
    /**
     * ID of this message
     */
    private int messageID;
    /**
     * ID of this session - generated by the router
     */
    private int sessionID;
    /**
     * Type of message
     */
    private I2CPMessageTypes type;

    /**
     * Create new I2CP message
     * @param messageID ID of this message
     * @param sessionID Session this message is a part of
     * @param type Type of message
     */
    I2CPMessage(int messageID, int sessionID, I2CPMessageTypes type) {
        this.messageID = messageID;
        this.sessionID = sessionID;
        this.type = type;
    }

    /**
     * Create a I2CP message from JSON
     * @param json JSON to deserialize
     * @throws InvalidObjectException Throws if message is invalid
     */
    I2CPMessage(JSONObject json) throws InvalidObjectException {
        deserialize(json);
    }


    @Override
    public void deserialize(JSONType jsonType) throws InvalidObjectException {
        if (!(jsonType instanceof  JSONObject))
            throw new InvalidObjectException("Must be JSONObject");

        JSONObject json = (JSONObject) jsonType;
        json.checkValidity(new String[] {"messageID", "sessionID", "type"});

        messageID = json.getInt("messageID");
        sessionID = json.getInt("sessionID");
        type = I2CPMessageTypes.values()[json.getInt("type")]; //get enum from ordinal using array of values
    }

    @Override
    public JSONObject toJSONType() {
        JSONObject json = new JSONObject();
        json.put("messageID", messageID);
        json.put("sessionID", sessionID);
        json.put("type", type.ordinal());
        return json;
    }

    public I2CPMessageTypes getType() {
        return type;
    }

    public int getMessageID() {
        return messageID;
    }

    public int getSessionID() {
        return sessionID;
    }
}
